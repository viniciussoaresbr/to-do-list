{"version":3,"sources":["components/common/button/Button.jsx","components/header/Header.jsx","contexts/NotesContext.jsx","components/common/input/Input.jsx","components/common/checkbox/Checkbox.jsx","components/filter/Filter.jsx","components/form/Form.jsx","components/statistics/Statistics.jsx","components/main/Main.jsx","components/note/Note.jsx","components/notelist/NoteList.jsx","App.js","index.js"],"names":["Button","evClick","text","type","className","onClick","event","Header","fnToggleForm","useState","toggleMenu","setToggleMenu","NotesContext","createContext","NotesContextProvider","children","notes","setNotes","done","setDone","undone","setUndone","searchStr","setSearchStr","Provider","value","createNote","id","idGenerator","fnToggleDone","checked","map","note","removeNote","filter","Input","label","evChange","validate","htmlFor","maxLength","required","onChange","target","Checkbox","Filter","useContext","Form","setText","onSubmit","preventDefault","Statistics","finishedNotes","unfinishedNotes","style","height","length","Main","Note","showAdvice","setShowAdvice","onMouseOver","onMouseOut","onDoubleClick","NoteList","nota","index","toUpperCase","includes","App","showForm","setShowForm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6594b692.chunk.js","sourcesContent":["import \"./Button.css\";\r\n\r\nconst Button = ({ evClick = () => {}, text, type = \"button\" }) => {\r\n    return (\r\n        <button\r\n            className=\"button\"\r\n            onClick={(event) => {\r\n                evClick(event);\r\n            }}\r\n            type={type}\r\n        >\r\n            {text}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import { useState } from \"react\";\r\nimport Button from \"../common/button/Button\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = ({ fnToggleForm }) => {\r\n  const [toggleMenu, setToggleMenu] = useState(false);\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"header__logo\">To-do list</h1>\r\n      <Button\r\n        text={toggleMenu ? \"Fechar Menu\" : \"Abrir Menu\"}\r\n        evClick={() => {\r\n          setToggleMenu(!toggleMenu);\r\n          fnToggleForm();\r\n        }}\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { createContext, useState } from \"react\";\r\nimport { v4 as idGenerator } from \"uuid\";\r\n\r\nexport const NotesContext = createContext({});\r\n\r\nconst NotesContextProvider = ({ children }) => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [done, setDone] = useState(true);\r\n  const [undone, setUndone] = useState(true);\r\n  const [searchStr, setSearchStr] = useState(\"\");\r\n\r\n  const createNote = ({ text }) => {\r\n    setNotes([...notes, { text, done: false, id: idGenerator() }]);\r\n  };\r\n\r\n  const fnToggleDone = (id, checked) => {\r\n    setNotes(\r\n      notes.map(note => {\r\n        if (note.id === id) {\r\n          note.done = checked;\r\n        }\r\n        return note;\r\n      })\r\n    );\r\n  };\r\n\r\n  const removeNote = id => {\r\n    setNotes(\r\n      notes.filter(note => {\r\n        return note.id !== id;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <NotesContext.Provider\r\n      value={{\r\n        createNote,\r\n        done,\r\n        setDone,\r\n        undone,\r\n        setUndone,\r\n        fnToggleDone,\r\n        searchStr,\r\n        setSearchStr,\r\n        notes,\r\n        removeNote,\r\n      }}\r\n    >\r\n      {children}\r\n    </NotesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default NotesContextProvider;\r\n","import \"./Input.css\";\r\nconst Input = ({\r\n  label = \"\",\r\n  value = \"\",\r\n  evChange = () => {},\r\n  validate = false,\r\n}) => {\r\n  return (\r\n    <div className=\"input\">\r\n      <label htmlFor=\"\" className=\"input__label\">\r\n        {label}\r\n      </label>\r\n      <input\r\n        maxLength=\"35\"\r\n        required={validate}\r\n        value={value}\r\n        type=\"text\"\r\n        className=\"input__field\"\r\n        onChange={event => {\r\n          evChange({ value: event.target.value });\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import \"./Checkbox.css\";\r\n\r\nconst Checkbox = ({ evClick = () => {}, checked = false }) => {\r\n  return (\r\n    <div\r\n      className=\"checkbox\"\r\n      onClick={() => {\r\n        evClick({ checked: !checked });\r\n      }}\r\n    >\r\n      <div className={checked ? \"checkbox--checked\" : \"\"}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","import \"./Filter.css\";\r\nimport Checkbox from \"../common/checkbox/Checkbox\";\r\nimport Input from \"../common/input/Input\";\r\nimport { useContext } from \"react\";\r\nimport { NotesContext } from \"../../contexts/NotesContext\";\r\n\r\nconst Filter = () => {\r\n  const { done, setDone, undone, setUndone, searchStr, setSearchStr } =\r\n    useContext(NotesContext);\r\n\r\n  return (\r\n    <>\r\n      <Input\r\n        label=\"Pesquisar:\"\r\n        value={searchStr}\r\n        evChange={({ value }) => {\r\n          setSearchStr(value);\r\n        }}\r\n      />\r\n      <label className=\"form__label\">Finalizadas</label>\r\n      <Checkbox\r\n        checked={done}\r\n        evClick={({ checked }) => {\r\n          setDone(checked);\r\n        }}\r\n      />\r\n      <label className=\"form__label\">NÃ£o Finalizadas</label>\r\n      <Checkbox\r\n        checked={undone}\r\n        evClick={({ checked }) => {\r\n          setUndone(checked);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { useContext, useState } from \"react\";\r\nimport { NotesContext } from \"../../contexts/NotesContext\";\r\nimport Button from \"../common/button/Button\";\r\nimport Input from \"../common/input/Input\";\r\nimport Filter from \"../filter/Filter\";\r\nimport \"./Form.css\";\r\n\r\nconst Form = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const { createNote } = useContext(NotesContext);\r\n\r\n  return (\r\n    <form\r\n      className=\"form\"\r\n      onSubmit={event => {\r\n        event.preventDefault();\r\n        createNote({ text });\r\n        setText(\"\");\r\n      }}\r\n    >\r\n      <Input\r\n        validate={true}\r\n        label=\"O que eu tenho pra fazer?\"\r\n        value={text}\r\n        evChange={({ value }) => {\r\n          setText(value);\r\n        }}\r\n      />\r\n      <Button text=\"Criar lembrete\" type=\"submit\" />\r\n      <Filter />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { useContext } from \"react\";\r\nimport { NotesContext } from \"../../contexts/NotesContext\";\r\nimport \"./Statistics.css\";\r\n\r\nconst Statistics = () => {\r\n  const { notes } = useContext(NotesContext);\r\n\r\n  const finishedNotes = notes.filter(note => note.done === true);\r\n  const unfinishedNotes = notes.filter(note => note.done === false);\r\n\r\n  return (\r\n    <section className=\"statistics\">\r\n      <h1 className=\"statistics__title\">EstatÃ­sticas:</h1>\r\n      <div className=\"statistics__container\">\r\n        <div\r\n          className=\"pipe\"\r\n          id=\"pipe--blue\"\r\n          style={{ height: `${notes.length}rem` }}\r\n        ></div>\r\n        <h1 className=\"statistics__info\">{`Total: ${notes.length}`}</h1>\r\n      </div>\r\n      <div className=\"statistics__container\">\r\n        <div\r\n          className=\"pipe\"\r\n          style={{ height: `${finishedNotes.length}rem` }}\r\n        ></div>\r\n        <h1 className=\"statistics__info\">{`Finalizadas: ${finishedNotes.length}`}</h1>\r\n      </div>\r\n      <div className=\"statistics__container\">\r\n        <div\r\n          className=\"pipe\"\r\n          id=\"pipe--red\"\r\n          style={{ height: `${unfinishedNotes.length}rem` }}\r\n        ></div>\r\n        <h1 className=\"statistics__info\">{`NÃ£o Finalizadas: ${unfinishedNotes.length}`}</h1>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import Form from \"../form/Form\";\r\nimport Statistics from \"../statistics/Statistics\";\r\nimport \"./Main.css\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <main className=\"main\">\r\n      <Form />\r\n      <Statistics />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { useState } from \"react\";\r\nimport { useContext } from \"react/cjs/react.development\";\r\nimport { NotesContext } from \"../../contexts/NotesContext\";\r\nimport Checkbox from \"../common/checkbox/Checkbox\";\r\n\r\nimport \"./Note.css\";\r\n\r\nconst Note = ({ note = { text: \"Note text\", done: false, id: 0 } }) => {\r\n  const { fnToggleDone, removeNote } = useContext(NotesContext);\r\n  const [showAdvice, setShowAdvice] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      className=\"note\"\r\n      onMouseOver={() => {\r\n        setShowAdvice(true);\r\n      }}\r\n      onMouseOut={() => {\r\n        setShowAdvice(false);\r\n      }}\r\n      onDoubleClick={() => {\r\n        removeNote(note.id);\r\n      }}\r\n    >\r\n      <div className=\"note__container\">\r\n        <span className=\"note__advice\">\r\n          {showAdvice && \"* Clique duas vezes para excluir\"}\r\n        </span>\r\n        <span className=\"note__text\">{note.text}</span>\r\n      </div>\r\n      <Checkbox\r\n        checked={note.done}\r\n        evClick={({ checked }) => {\r\n          fnToggleDone(note.id, checked);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import { useContext } from \"react\";\r\nimport { NotesContext } from \"../../contexts/NotesContext\";\r\nimport Note from \"../note/Note\";\r\nimport \"./NoteList.css\";\r\n\r\nconst NoteList = () => {\r\n  const { searchStr, notes, done, undone } = useContext(NotesContext);\r\n\r\n  return (\r\n    <div className=\"noteList\">\r\n      {notes\r\n        .filter(nota => {\r\n          if (done && undone) {\r\n            return nota;\r\n          } else if (done) {\r\n            return nota.done === true;\r\n          } else if (undone) {\r\n            return nota.done === false;\r\n          } else {\r\n            return null;\r\n          }\r\n        })\r\n        .map((note, index) => {\r\n          if (note.text.toUpperCase().includes(searchStr.toUpperCase())) {\r\n            return <Note note={note} key={index} />;\r\n          } else {\r\n            return <></>;\r\n          }\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteList;\r\n","import { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/header/Header\";\r\nimport Main from \"./components/main/Main\";\r\nimport NoteList from \"./components/notelist/NoteList\";\r\nimport NotesContextProvider from \"./contexts/NotesContext\";\r\n\r\nfunction App() {\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header\r\n        fnToggleForm={() => {\r\n          setShowForm(!showForm);\r\n        }}\r\n      />\r\n      <NotesContextProvider>\r\n        {showForm ? <Main /> : null}\r\n        <NoteList />\r\n      </NotesContextProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}